@namespace AElemental.Components

@inject NavigationManager _navigationManager

<bx-side-nav aria-label="Side navigation" expanded style="@_style">
    <bx-side-nav-items>
        @foreach (var item in Links ?? Enumerable.Empty<AeLayoutNavLink>())
        {
            if (item.SubLinks != null && item.SubLinks.Any())
            {
                <bx-side-nav-menu title="@item.Name" 
                                  active="@(_currentUrl?.Trim('/').StartsWith(item.Url?.Trim('/') ?? ""))" 
                                  expanded="@(_currentUrl?.Trim('/').StartsWith(item.Url?.Trim('/') ?? ""))">
                    @if (item.Icon != null)
                    {
                        <AeIcon slot="title-icon" RxIconName="@item.Icon"/>
                    }
                    @foreach (var subItem in item.SubLinks)
                    {
                        if (subItem.CustomRender != null)
                        {
                            @subItem.CustomRender
                        }
                        else
                        {
                            <bx-side-nav-menu-item href="@subItem.Url" active="@(subItem.Url?.Trim('/') == _currentUrl?.Trim('/'))">
                                @subItem.Name
                            </bx-side-nav-menu-item>
                        }
                    }
                </bx-side-nav-menu>
            }
            else
            {
                @if (item.CustomRender != null)
                {
                    @item.CustomRender
                }
                else
                {
                    <bx-side-nav-link href="@item.Url">
                        @if (item.Icon != null)
                        {
                            <AeIcon slot="title-icon" RxIconName="@item.Icon"/>
                        }
                        @item.Name
                    </bx-side-nav-link>
                }
            }
        }
    </bx-side-nav-items>
</bx-side-nav>

@code {

    [CascadingParameter]
    private AeLayout? Layout { get; set; }

    [Parameter]
    public IEnumerable<AeLayoutNavLink>? Links { get; set; }
    
    private string? _style;
    private string? _currentUrl;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _currentUrl = _navigationManager.ToBaseRelativePath(_navigationManager.Uri);
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        
        _style = new AeStyleBuilder()
            .AddStyle("margin-top", Layout!.TopMargin)
            .AddStyle("height", $"calc(100% - {Layout!.TopMargin})")
            .AddStyle("z-index", "7999")
            .NullIfEmpty();

        _currentUrl = _navigationManager.ToBaseRelativePath(_navigationManager.Uri);
    }
    
    
}