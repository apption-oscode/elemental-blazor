@using AElemental;

@if (file != null)
{
    <AeFlex Vertical class="demo-section">
        @if (file.Title != null)
        {
            <AeTypography Variant="h2">@file.Title</AeTypography>
        }
        @if (file.Description != null)
        {
            <AeTypography>@file.Description</AeTypography>
        }
        @if (file.Html != null)
        {
            <AeFlex Vertical>
                <AeTypography Variant="h3">Example</AeTypography>
                @ChildContent
            </AeFlex>
        }
        @if (file.Code.Count > 0 || file.Html.Count > 0)
        {
            <AeFlex Vertical>
                <AeTypography Variant="h3">Source</AeTypography>
                @if (file.AdditionalCode?.Count > 0)
                {
                    <AeTypography style="margin-top: .75rem;" Variant="h4">C#</AeTypography>
                    <AeCode LineType="@AeCode.LineTypes.Multiline">
                        @(string.Join(System.Environment.NewLine, file.AdditionalCode).Trim())
                    </AeCode>
                    @* <div class="code-wrapper"> *@
                    @*     <pre style="margin: 0"><code class="language-csharp">@(string.Join(System.Environment.NewLine, file.AdditionalCode))</code></pre> *@
                    @* </div> *@
                }

                @if (file.Html.Count > 0)
                {
                    <AeTypography style="margin-top: 0;" Variant="h4">Markup</AeTypography>
                    <AeCode LineType="@AeCode.LineTypes.Multiline">
                        @(string.Join(System.Environment.NewLine, file.Html).Trim())
                    </AeCode>
                    @* <div class="code-wrapper"> *@
                    @*     <pre style="margin: 0"><code class="language-html">@(string.Join(System.Environment.NewLine, file.Html))</code></pre> *@
                    @* </div> *@
                }
                @if (file.Code.Count > 0)
                {
                    <AeTypography style="margin-top: .75rem;" Variant="h4">C#</AeTypography>
                    <AeCode LineType="@AeCode.LineTypes.Multiline">>
                        @(string.Join(System.Environment.NewLine, file.Code).Trim())
                    </AeCode>
                    @* <div class="code-wrapper"> *@
                    @*     <pre style="margin: 0"><code class="language-csharp">@(string.Join(System.Environment.NewLine, file.Code))</code></pre> *@
                    @* </div> *@
                }
                @if (file.Scss?.Count > 0)
                {
                    <AeTypography style="margin-top: .75rem;" Variant="h4">SCSS</AeTypography>
                    <AeCode LineType="@AeCode.LineTypes.Multiline">>
                        @(string.Join(System.Environment.NewLine, file.Scss).Trim())
                    </AeCode>
                    @* <div class="code-wrapper"> *@
                    @*     <pre style="margin: 0"><code class="language-scss">@(string.Join(System.Environment.NewLine, file.Scss))</code></pre> *@
                    @* </div> *@
                }
            </AeFlex>
        }
    </AeFlex>
}
else
{
    <div>File not found: @Path</div>
}

@code {
    [Parameter]
    public string Path { get; set; }
    [Parameter]
    public string AdditionalCS { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private ParsedFile file;

    protected override void OnInitialized()
    {
        file = new ParsedFile(Path, AdditionalCS);
    }
}
